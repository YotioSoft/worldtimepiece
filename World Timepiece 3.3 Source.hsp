#include "user32.as"

//変数の初期化
	top=0

	dim RECT, 4
	title"World Timepiece"
	
//バッファ
	buffer 1
	color : boxf 0,0,20,20
	color 255,255,255 : line 5,5,15,15 : line 15,5,5,15
	color 230,230,230 : boxf 0,20,20,40
	color 0,0,0 : line 5,25,15,35 : line 15,25,5,35
	
	celload"i/logo.png",3
	
	celload"i/game.png",5
	celload"i/game1.png",6
	celload"i/game2.png",7
	celload"i/game3.png",8
	
	buffer 9
	color 0,142,148:boxf 0,0,200,40
	
	celload"i/correct.png",10
	celload"i/mistake.png",11
	celload"i/worldmap.png",12
	celload"i/i.png",13
	celload"i/earth_clock.png",14
	celload"i/earth.png",15
	
	gsel 0, 2
	
//設定の読み込み
	notesel config
	noteload "data/config.dat"
	
	noteget offline_mode_buf, 0
	
	split offline_mode_buf, " : ", not_use, offline_mode
	offline_mode = int(offline_mode)
	
//フォントの埋め込み
	#include "gdi32.as"
	notesel newfont
	noteload "NotoSansCJKsc-Light.otf"
	AddFontMemResourceEx varptr(newfont), strsize, 0, varptr(pcFonts)
	hFont = stat ; フォントハンドル
	
//関数の登録 
#uselib "user32.dll" 
	#func GetWindowLongA2 "GetWindowLongA" int , int 
	#func SetWindowLongA2 "SetWindowLongA" int , int , int 
	#func SetLayered2 "SetLayeredWindowAttributes" int , int , int , int 
	
	#define WM_NCLBUTTONDOWN $000000A1
	#define HTCAPTION 2
	
	#func SetTimerA  "SetTimer"  int, int, int, int			;ウィンドウタイマーに使う
	#func KillTimerA "KillTimer" int, int
	#define WM_TIMER        0x0113
	#define ID_TIMER        1

	bgscr 0,1024,640
	gsel 0, 2
	onexit *exit
	
//ウィンドウタイマー
	oncmd  gosub *ontimer, WM_TIMER
	SetTimerA hwnd, ID_TIMER, 50, 0			;数値を下げれば下げるほど動作が早くなるが、バグが起こりやすくなる

#module
	
#deffunc gblur int p1, int p2	;画像をぼかす（hsp/sample/new/gblur.hsp）
	gmode 3, ginfo_sx, ginfo_sy, 128
	if (p2&1)=0 {
		repeat p1
		pos 1,0:gcopy ginfo(3)
		pos 0,0:gcopy ginfo(3),2,0
		if looplev>30:return
		loop
	}
	if (p2&2)=0 {
		repeat p1
		pos 0,1:gcopy ginfo(3)
		pos 0,0:gcopy ginfo(3),0,2
		if looplev>30:return
		loop
	}
	return
	
#deffunc boxfa int ax, int ay, int bx, int by //半透明色関数の登録
	pdx = ax, bx, bx, ax
	pdy = ay, ay, by, by
	gsquare -1,pdx, pdy
	return
	
#deffunc cmes str ctext, int cx, int cy, int cx2, int cy2	;文字を中央に表示
	#include "user32.as"
	RECT = cx, cy, cx2, cy2
	DrawText hdc, ctext, -1, varptr(RECT), $01
	return
	
#global
	
	color 230, 230, 230 : boxf
	font "Noto Sans CJK SC Light",16 : color 0, 0, 0
	cmes "時刻を取得中です...", 0, 260, 1024, 280
	redraw 1
	
	sdim cityname, 40
	
	cityname.0="Tokyo, Japan"
	cityname.1="Vladivostok, Russia"
	cityname.2="Seoul, South Korea"
	cityname.3="Shanghai, China"
	cityname.4="Taipei, Taiwan"
	cityname.5="Beijing, China"
	cityname.6="Perth, Australia"
	cityname.7="Hong Kong, China"
	cityname.8="Jakarta, Indonesia"
	cityname.9="Irkutsk, Russia"
	cityname.10="Singapore, Singapore"
	cityname.11="Bangkok, Thailand"
	cityname.12="Delhi, India"
	cityname.13="Karachi, Pakistan"
	cityname.14="Dubai, the UAE"
	cityname.15="Moscow, Russia"
	cityname.16="Jerusalem, Israel"
	cityname.17="Cairo, Egypt"
	cityname.18="Saint Petersburg, Russia"
	cityname.19="Istanbul, Turkey"
	cityname.20="Johannesburg, South Africa"
	cityname.21="Helsinki, Finland"
	cityname.22="Berlin, Germany"
	cityname.23="Rome, Italy"
	cityname.24="Amsterdam, Netherland"
	cityname.25="Brussels, Belguim"
	cityname.26="Paris, France"
	cityname.27="London, the UK"
	cityname.28="Accra, Ghana"
	cityname.29="Madrid, Spain"
	cityname.30="Rio de Janeiro, Brazil"
	cityname.31="New York, the USA"
	cityname.32="Tronto, Canada"
	cityname.33="Mexico City, Mexico"
	cityname.34="Los Angeles, the USA"
	cityname.35="Vancouver, Canada
	cityname.36="Anchorage, the USA"
	cityname.37="Honolulu, the USA"
	cityname.38="Auckland, New Zealand"
	cityname.39="Sydney, Australia"
	
	selected_city = "Tokyo"
	goto *clicked_city
	
*exit
	oncmd 0
	
	notesel config
	noteadd "offline_mode : "+offline_mode+"", 0, 1
	notesave "data/config.dat"
	
	end
	
*click
	oncmd 0
	
	on_click = 0
	
	if ( from_game1=0 and now="clock" and 790<= mousex & 990 >= mousex and 30<= mousey & 610 >= mousey ) or from_game1=1{
		if ( from_game1=0 and 40+24*(0+top)<= mousey & 40+24*(1+top) >= mousey ) or ( from_game1=1 and random_city_id_2=0) {
			selected_city = "Tokyo"
		}
		if ( from_game1=0 and 40+24*(1+top)<= mousey & 40+24*(2+top) >= mousey ) or ( from_game1=1 and random_city_id_2=1) {
			selected_city = "Vladivostok"
		}
		if ( from_game1=0 and 40+24*(2+top)<= mousey & 40+24*(3+top) >= mousey ) or ( from_game1=1 and random_city_id_2=2 ) {
			selected_city = "Seoul"
		}
		if ( from_game1=0 and 40+24*(3+top)<= mousey & 40+24*(4+top) >= mousey ) or ( from_game1=1 and random_city_id_2=3 ) {
			selected_city = "Shanghai"
		}
		if ( from_game1=0 and 40+24*(4+top)<= mousey & 40+24*(5+top) >= mousey ) or ( from_game1=1 and random_city_id_2=4 ) {
			selected_city = "Taipei"
		}
		if ( from_game1=0 and 40+24*(5+top)<= mousey & 40+24*(6+top) >= mousey ) or ( from_game1=1 and random_city_id_2=5 ) {
			selected_city = "Beijing"
		}
		if ( from_game1=0 and 40+24*(6+top)<= mousey & 40+24*(7+top) >= mousey ) or ( from_game1=1 and random_city_id_2=6 ) {
			selected_city = "Perth"
		}
		if ( from_game1=0 and 40+24*(7+top)<= mousey & 40+24*(8+top) >= mousey ) or ( from_game1=1 and random_city_id_2=7 ) {
			selected_city = "Hong Kong"
		}
		if ( from_game1=0 and 40+24*(8+top)<= mousey & 40+24*(9+top) >= mousey ) or ( from_game1=1 and random_city_id_2=8 ) {
			selected_city = "Jakarta"
		}
		if ( from_game1=0 and 40+24*(9+top)<= mousey & 40+24*(10+top) >= mousey ) or ( from_game1=1 and random_city_id_2=9 ) {
			selected_city = "Irkutsk"
		}
		if ( from_game1=0 and 40+24*(10+top)<= mousey & 40+24*(11+top) >= mousey ) or ( from_game1=1 and random_city_id_2=10 ) {
			selected_city = "Singapore"
		}
		if ( from_game1=0 and 40+24*(11+top)<= mousey & 40+24*(12+top) >= mousey ) or ( from_game1=1 and random_city_id_2=11 ) {
			selected_city = "Bangkok"
		}
		if ( from_game1=0 and 40+24*(12+top)<= mousey & 40+24*(13+top) >= mousey ) or ( from_game1=1 and random_city_id_2=12 ) {
			selected_city = "Delhi"
		}
		if ( from_game1=0 and 40+24*(13+top)<= mousey & 40+24*(14+top) >= mousey ) or ( from_game1=1 and random_city_id_2=13 ) {
			selected_city = "Karachi"
		}
		if ( from_game1=0 and 40+24*(14+top)<= mousey & 40+24*(15+top) >= mousey ) or ( from_game1=1 and random_city_id_2=14 ) {
			selected_city = "Dubai"
		}
		if ( from_game1=0 and 40+24*(15+top)<= mousey & 40+24*(16+top) >= mousey ) or ( from_game1=1 and random_city_id_2=15 ) {
			selected_city = "Moscow"
		}
		if ( from_game1=0 and 40+24*(16+top)<= mousey & 40+24*(17+top) >= mousey ) or ( from_game1=1 and random_city_id_2=16 ) {
			selected_city = "Jerusalem"
		}
		if ( from_game1=0 and 40+24*(17+top)<= mousey & 40+24*(18+top) >= mousey ) or ( from_game1=1 and random_city_id_2=17 ) {
			selected_city = "Cairo"
		}
		if ( from_game1=0 and 40+24*(18+top)<= mousey & 40+24*(19+top) >= mousey ) or ( from_game1=1 and random_city_id_2=18 ) {
			selected_city = "Saint Petersburg"
		}
		if ( from_game1=0 and 40+24*(19+top)<= mousey & 40+24*(20+top) >= mousey ) or ( from_game1=1 and random_city_id_2=19 ) {
			selected_city = "Istanbul"
		}
		if ( from_game1=0 and 40+24*(20+top)<= mousey & 40+24*(21+top) >= mousey ) or ( from_game1=1 and random_city_id_2=20 ) {
			selected_city = "Johannesburg"
		}
		if ( from_game1=0 and 40+24*(21+top)<= mousey & 40+24*(22+top) >= mousey ) or ( from_game1=1 and random_city_id_2=21 ) {
			selected_city = "Helsinki"
		}
		if ( from_game1=0 and 40+24*(22+top)<= mousey & 40+24*(23+top) >= mousey ) or ( from_game1=1 and random_city_id_2=22 ) {
			selected_city = "Berlin"
		}
		if ( from_game1=0 and 40+24*(23+top)<= mousey & 40+24*(24+top) >= mousey ) or ( from_game1=1 and random_city_id_2=23 ) {
			selected_city = "Rome"
		}
		if ( from_game1=0 and 40+24*(24+top)<= mousey & 40+24*(25+top) >= mousey ) or ( from_game1=1 and random_city_id_2=24 ) {
			selected_city = "Amsterdam"
		}
		if ( from_game1=0 and 40+24*(25+top)<= mousey & 40+24*(26+top) >= mousey ) or ( from_game1=1 and random_city_id_2=25 ) {
			selected_city = "Brussels"
		}
		if ( from_game1=0 and 40+24*(26+top)<= mousey & 40+24*(27+top) >= mousey ) or ( from_game1=1 and random_city_id_2=26 ) {
			selected_city = "Paris"
		}
		if ( from_game1=0 and 40+24*(27+top)<= mousey & 40+24*(28+top) >= mousey ) or ( from_game1=1 and random_city_id_2=27 ) {
			selected_city = "London"
		}
		if ( from_game1=0 and 40+24*(28+top)<= mousey & 40+24*(29+top) >= mousey ) or ( from_game1=1 and random_city_id_2=28 ) {
			selected_city = "Accra"
		}
		if ( from_game1=0 and 40+24*(29+top)<= mousey & 40+24*(30+top) >= mousey ) or ( from_game1=1 and random_city_id_2=29 ) {
			selected_city = "Madrid"
		}
		if ( from_game1=0 and 40+24*(30+top)<= mousey & 40+24*(31+top) >= mousey ) or ( from_game1=1 and random_city_id_2=30 ) {
			selected_city = "Rio de Janeiro"
		}
		if ( from_game1=0 and 40+24*(31+top)<= mousey & 40+24*(32+top) >= mousey ) or ( from_game1=1 and random_city_id_2=31 ) {
			selected_city = "New York"
		}
		if ( from_game1=0 and 40+24*(32+top)<= mousey & 40+24*(33+top) >= mousey ) or ( from_game1=1 and random_city_id_2=32 ) {
			selected_city = "Toronto"
		}
		if ( from_game1=0 and 40+24*(33+top)<= mousey & 40+24*(34+top) >= mousey ) or ( from_game1=1 and random_city_id_2=33 ) {
			selected_city = "Mexico City"
		}
		if ( from_game1=0 and 40+24*(34+top)<= mousey & 40+24*(35+top) >= mousey ) or ( from_game1=1 and random_city_id_2=34 ) {
			selected_city = "Los Angeles"
		}
		if ( from_game1=0 and 40+24*(35+top)<= mousey & 40+24*(36+top) >= mousey ) or ( from_game1=1 and random_city_id_2=35 ) {
			selected_city = "Vancouver"
		}
		if ( from_game1=0 and 40+24*(36+top)<= mousey & 40+24*(37+top) >= mousey ) or ( from_game1=1 and random_city_id_2=36 ) {
			selected_city = "Anchorage"
		}
		if ( from_game1=0 and 40+24*(37+top)<= mousey & 40+24*(38+top) >= mousey ) or ( from_game1=1 and random_city_id_2=37 ) {
			selected_city = "Honolulu"
		}
		if ( from_game1=0 and 40+24*(38+top)<= mousey & 40+24*(39+top) >= mousey ) or ( from_game1=1 and random_city_id_2=38 ) {
			selected_city = "Auckland"
		}
		if ( from_game1=0 and 40+24*(39+top)<= mousey & 40+24*(40+top) >= mousey ) or ( from_game1=1 and random_city_id_2=39 ) {
			selected_city = "Sydney"
		}
	
		goto*clicked_city
	}
	
	if 910<= mousex & 940 >= mousex and 5<= mousey & 25 >= mousey{
		if now="clock":goto*buffer_about_city
		if now="game" or now="about" or now="earth_clock" :goto*display
	}
	if 940<= mousex & 970 >= mousex and 5<= mousey & 25 >= mousey{
		goto*earth_clock
	}
	if 970<= mousex & 1000 >= mousex and 5<= mousey & 25 >= mousey{
		goto*about
	}
	if 1000<= mousex & 1024 >= mousex and 5<= mousey & 25 >= mousey{
		goto*exit
	}
	
	oncmd 1
	
*idou
	if wparam == 1 and 0<= mousey & 40 >= mousey{		;タイトルバー部分が押されていた場合、ウィンドウを動かす
		sendmsg hwnd,WM_NCLBUTTONDOWN,HTCAPTION,0
	}
	
	return

*clicked_city
	oncmd 0
	
	//都市の時差情報を取得
	notesel timedif_dat
	noteload "data/timedif.dat"
	
	repeat notemax
		notesel timedif_dat
		noteget timedif_city_name_buf, cnt
		
		if timedif_city_name_buf = "["+selected_city+"]" {
			tcnt = cnt
			break
		}
	
		await 1
	loop
	
	;その都市にサマータイムがあるか取得
	notesel timedif_dat
	noteget summer_time_exist, (tcnt+5)
	split summer_time_exist, " : ", not_use, summer_time_exist
	summer_time_exist = int(summer_time_exist)
	
	sdim about_city, 1
	
	if summer_time_exist = 1 {		;サマータイムがある場合
	
		dim timedif_buf, 13
	
		repeat 15
			notesel timedif_dat
	
			if cnt <= 1 {
				noteget about_city.cnt, (cnt+tcnt+1)
				split about_city.cnt, " : ", not_use, about_city.cnt
			}
			
			if cnt >= 2 {
				noteget timedif_buf.(cnt-2), (cnt+tcnt+1)
	
				;夏時間の始まり・終わりが「最終日曜日」の場合は、ひとまず"last"を"7"に置き換え
				;"last"はsummer_start_week_numberまたはsummer_finish_week_numberで夏時間が始まる・終わる日が最終日曜日であることを示す
				split timedif_buf.(cnt-2), " : ", not_use, timedif_buf.(cnt-2)
				if timedif_buf.(cnt-2) = "last" : timedif_buf.(cnt-2) = "7"
			}
			await 1
		loop
	
		city = about_city.0
		city_jp = about_city.1
		
		city_id = int(timedif_buf.0)
		timedif = double(timedif_buf.1)
			timedif_st = timedif		;標準時の時差
		
		summer_start_month = int(timedif_buf.3)
		summer_start_week_number = int(timedif_buf.4)
		summer_start_week = int(timedif_buf.5)
		summer_start_time = int(timedif_buf.6)
		summer_finish_month = int(timedif_buf.7)
		summer_finish_week_number = int(timedif_buf.8)
		summer_finish_week = int(timedif_buf.9)
		summer_finish_time = int(timedif_buf.10)
		hemisphere = timedif_buf.11
		font_color = int(timedif_buf.12)
		
	}else{							;サマータイムがない場合
	
		dim timedif_buf, 3
		
		repeat 6
			notesel timedif_dat
	
			if cnt <= 1 {
				noteget about_city.cnt, (cnt+tcnt+1)
				split about_city.cnt, " : ", not_use, about_city.cnt
			}
			
			if cnt >= 2 {
				noteget timedif_buf.(cnt-2), (cnt+tcnt+1)
				split timedif_buf.(cnt-2), " : ", not_use, timedif_buf.(cnt-2)
			}
			await 1
		loop
		
		city = about_city.0
		city_jp = about_city.1
		
		city_id = int(timedif_buf.0)
		timedif = double(timedif_buf.1)
		
		font_color = int(timedif_buf.3)
		
	}
	
	displayed_time_of_the_city = 0
	got_summer_time_hour = -1
	
*display
	if from_game1=1 : return : else : from_game1=0		;*game1から来た場合、戻る
	
	clrobj
	
	now="clock"
	
	onclick gosub *click
	onkey 0
	
	redraw 0
	
	//都市の概要を読み込み
	if displayed_time_of_the_city = 0 {
		notesel about_city
		noteload"data/about_city.txt"
		
		buffer 4
		picload "i/"+city+".jpg":gblur 1
		gsel 0, 2
	}
	
	about_start = instr (about_city,0,""+city+"{") + strlen(city) +2
	about_end = instr (about_city,about_start,"}")
	about_the_city = strmid (about_city,about_start,about_end)
	
	if scroll=0{
		pos 0,0:gmode 0:gcopy 4,0,0,1024,640
		color 0,0,0:gmode 4,,,60
		boxfa 0,0,1024,640
	}
	if scroll=1{
		pos 750,0:gmode 0:gcopy 4,750,0,900,640
		color 0,0,0:gmode 4,,,60
		boxfa 750,0,1024,640
	
		scroll=0
	}
	
	//メニュー
	color 195,195,195:line 760,30,760,610
	repeat 40
		font "Noto Sans CJK SC Light",16
		color 255,255,255
		pos 790,40+24*(cnt+top)
		mes cityname.cnt
		
		await 1
	loop
	
	color 0,100,255 : boxf 785,40+24*(city_id+top), 990,40+24*(city_id+top+1)
	color 255,255,255 : pos 790,40+24*(city_id+top) : mes cityname.city_id
	
	pos 760,0:gmode 0:gcopy 4,760,0,235,42
	pos 765,620:gmode 0:gcopy 4,765,620,235,42
	color 0,0,0:gmode 4,,,60
	boxfa 760,0,995,42
	boxfa 765,620,765+235,620+42
	
	//タイトルとボタン
	font "Noto Sans CJK SC Light",14 : color 255,255,255 : pos 10,3:mes"World Timepiece"
	pos 910,5:gmode 2:gcopy 5,0,0,20,20		;ゲームボタン
	pos 940,5:gmode 2:gcopy 14,0,0,20,20	;地球時計
	pos 970,5:gmode 2:gcopy 13,0,0,20,20	;情報
	pos 1000,5:gmode 2:gcopy 1,0,0,20,20	;閉じるボタン
	
	redraw 1
	
	//時刻をNICTから取得（オフラインモードが0のとき）
	if offline_mode = 0 and return_to_display = 0 {
		#include "hspinet.as"
		netinit
		neturl "http://ntp-a1.nict.go.jp/cgi-bin/"
		netrequest_get "json"
		repeat
			netexec res
			if res>0 : break
	
			;取得できない場合は自動でオフラインモードに切り替え、もう一度*displayへ戻る
			if res<0 {
				dialog"現在時刻の読み込みに失敗しました。\nオフラインモードに切り替え、お使いのパソコンから時刻を取得します。"
				offline_mode = 1
				goto*display
			}
			await 50
		loop
		netgetv buf
		lf="0"
		poke lf,0,10
		strrep buf,lf,"\n"
		jsonopen p1,buf
		jsongeti time,"st",p1
		day=time/86400
		time+=3600*9
		time\=86400
		jhour=time/3600
		jminute=(time/60)\60
		jsecond=time\60 + 1			;最初はたいてい1秒ずれるのであらかじめ1秒足しておく（毎分0秒になると直ります）
	
		jti_after_get_time = jti
	
		;夏時間がある場合は夏時間の期間内かどうかを判断
		if summer_time_exist = 1 {
			
			hour = jhour + timedif_st				;一旦標準時に戻す
			if hour < 0 {	;表示する時間がマイナスになった場合
				hour = hour+24
			}
			if hour > 23{	;表示する時間が24時以上になった場合
				hour = hour-24
			}
			
			gosub*get_summer_time
		}
		
		hour = timedif + jhour
	}
	
	//時刻をパソコンから取得（オフラインモード適用時）
	if offline_mode = 1 and return_to_display = 0 {
		jhour = gettime(4)
		jminute = gettime(5)
		jsecond = gettime(6)
	
		;夏時間がある場合は夏時間の期間内かどうかを判断
		if summer_time_exist = 1 {
			
			hour = jhour + timedif_st				;一旦標準時に戻す
			gosub*get_summer_time
		}
		
		hour = timedif + jhour
	}
	
*display2
	redraw 0
		
		on_click = 1
		
		pos 0,25:gmode 0:gcopy 4,0,25,750,640
		color 0,0,0:gmode 4,,,60
		boxfa 0,25,750,640
	
		jti++
	
		if jti >= 16 {
			jti = 0
		}
	
		if jti = jti_after_get_time {
			jsecond++
			if jsecond >= 60 {
				jminute ++
				jsecond = 0
			}
			if jminute >= 60 {
				jhour ++
				jminute = 0
			}
			if jhour >= 24 {
				jhour = 0
			}
		}
	
		second = jsecond
		minute = jminute
		
		if timedif = -3.5 {		;UTC5:30（インド時間）の場合
			minute= jminute - 30
			if minute >= 0 : hour = jhour - 3
			if minute <  0 : hour = jhour - 4
			
			if minute < 0  : minute = minute + 60
			if minute > 59 : minute = minute - 60
		}
	
		if second > 59 {
			second = 0
		}
		if minute > 59 {
			minute = 0
		}
	
		;夏時間がある場合は夏時間を取得（毎時0分）
		if summer_time_exist = 1 and minute = 0 and second = 0 and jti = 0 {
			oncmd 0
			
			hour = jhour + timedif_st				;一旦標準時に戻す
			gosub *get_summer_time					;*get_summer_timeにて夏時間期間中か判定
		}
		
		if jsecond = 0 {
			hour = jhour + timedif
		}
	
		if hour < 0 {	;表示する時間がマイナスになった場合
			hour = hour+24
		}
		if hour > 23{	;表示する時間が24時以上になった場合
			hour = hour-24
		}
		
		s=strf("%02d",hour)+":"
		s+=strf("%02d",minute)
		sec="."+strf("%02d",second)
		
		color font_color, font_color, font_color
		font "Noto Sans CJK SC Light",90:pos 100,50:mes s
		font "Noto Sans CJK SC Light",40:pos 320,110:mes sec
		
		font "Noto Sans CJK SC Light",22
		pos 100,200:mes city_jp
		font "Noto Sans CJK SC Light",14
		pos 110,235:mes about_the_city
		
	redraw 1
	
	oncmd 0
	
	//マウスホイールが動いたとき
	mousew_buf=mousew
	if mousew_buf>24 and top<0{
		top=top+1
		scroll=1
		
		return_to_display = 1
		redraw 1
		goto *display
	}
	if mousew_buf<-24 and top>-16{
		top=top-1
		scroll=1
	
		return_to_display = 1
		redraw 1
		goto *display
	}
	
	if return_to_display = 1 {
		return_to_display = 0
	}
	
	displayed_time_of_the_city = 1
	
	oncmd 1
	
	if sub=1 : sub=0 : return
	
	stop
	
*buffer_about_city
	//表示していた都市の情報を一時保存
	city_buf=city : city_jp_buf=city_jp : city_id_buf=city_id
	timedif_buf=timedif : summertime_start_buf=summertime_start : summertime_end_buf=summertime_end
	fontcolor_buf=fontcolor
	
*game
	status=""
	correct_total=0
	selected_game=0
	from_game1=0
	
	now="game"
	
	oncmd 0		;ウィンドウタイマー割り込み一時停止
	
	clrobj
	
	color 230,230,230:boxf
	font "Noto Sans CJK SC Light",14 : color : pos 10,3:mes"World Timepiece"
	pos 910,5:gmode 0:gcopy 5,0,20,20,20	;ゲームボタン
	pos 940,5:gmode 0:gcopy 14,0,20,20,20	;地球時計
	pos 970,5:gmode 0:gcopy 13,0,20,20,20	;情報
	pos 1000,5:gmode 0:gcopy 1,0,20,20,20	;閉じるボタン
	
	pos 257,150:gcopy 6,0,0,150,150
	pos 437,150:gcopy 7,0,0,150,150
	pos 617,150:gcopy 8,0,0,150,150
	
	games=0
	onclick gosub*click_game
	
	repeat
	redraw 0
	
	if 257<= mousex & 407 >= mousex and 150<= mousey & 300 >= mousey{
		selected_game=1
		color 230,230,230:boxf 250,330,774,570
		font "Noto Sans CJK SC Light",36:color 0,142,148
		cmes"Time Quiz",300,330,724,550
		font "Noto Sans CJK SC Light",18
		cmes"現地時間を当てるゲームです。\nLevel1からLevel3まではヒントが表示されますが、\nLevel4ではノーヒントです。\n※同じ選択肢や同じ問題が二度出てくることがあります。",250,400,774,550
	
		font "Noto Sans CJK SC Light",14
		pos 300,550:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Level1",300,548,400,570
		pos 410,550:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Level2",410,548,510,570
		pos 520,550:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Level3",520,548,620,570
		pos 630,550:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Level4",630,548,730,570
	}
	if 437<= mousex & 587 >= mousex and 150<= mousey & 300 >= mousey{
		selected_game=2
		color 230,230,230:boxf 250,330,774,570
		font "Noto Sans CJK SC Light",36:color 0,142,148
		cmes"City Name Quiz",300,330,724,550
		font "Noto Sans CJK SC Light",18
		cmes"国の名前から首都の名前を当てるゲームです。\nレベルが上がるごとにマイナーな都市も含めて出題されます。\nLevel4ではポイントが2倍になります。",250,400,774,550
	
		font "Noto Sans CJK SC Light",14
		pos 300,550:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Level1",300,548,400,570
		pos 410,550:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Level2",410,548,510,570
		pos 520,550:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Level3",520,548,620,570
		pos 630,550:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Level4",630,548,730,570
	}
	if 617<= mousex & 767 >= mousex and 150<= mousey & 300 >= mousey{
		selected_game=3
		color 230,230,230:boxf 250,330,774,570
		font "Noto Sans CJK SC Light",36:color 0,142,148
		cmes"Country Name Quiz",300,330,724,550
		font "Noto Sans CJK SC Light",18
		cmes"都市の名前から国の名前を当てるゲームです。\nレベルが上がるごとにマイナーな都市や\n首都以外の都市も含めて出題されます。",250,400,774,550
	
		font "Noto Sans CJK SC Light",14
		pos 352,550:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Level1",352,548,452,570
		pos 462,550:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Level2",462,548,562,570
		pos 572,550:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Level3",572,548,672,570
	}
	redraw 1
	wait 1
	loop
	stop
*click_game
	if selected_game=1{
		selected_game=0
		if 300<= mousex & 400 >= mousex and 550<= mousey & 570 >= mousey : level=1:goto*game1_random
		if 410<= mousex & 510 >= mousex and 550<= mousey & 570 >= mousey : level=2:goto*game1_random
		if 520<= mousex & 620 >= mousex and 550<= mousey & 570 >= mousey : level=3:goto*game1_random
		if 630<= mousex & 730 >= mousex and 550<= mousey & 570 >= mousey : level=4:goto*game1_random
	}
	if selected_game=2{
		selected_game=0
		if 300<= mousex & 400 >= mousex and 550<= mousey & 570 >= mousey : level=1:goto*game2_random
		if 410<= mousex & 510 >= mousex and 550<= mousey & 570 >= mousey : level=2:goto*game2_random
		if 520<= mousex & 620 >= mousex and 550<= mousey & 570 >= mousey : level=3:goto*game2_random
		if 630<= mousex & 730 >= mousex and 550<= mousey & 570 >= mousey : level=4:goto*game2_random
	}
	if selected_game=3{
		selected_game=0
		if 352<= mousex & 452 >= mousex and 550<= mousey & 570 >= mousey : level=1:goto*game3_random
		if 462<= mousex & 562 >= mousex and 550<= mousey & 570 >= mousey : level=2:goto*game3_random
		if 572<= mousex & 672 >= mousex and 550<= mousey & 570 >= mousey : level=3:goto*game3_random
	}
	
	if 910<= mousex & 940 >= mousex and 5<= mousey & 25 >= mousey{
		city=city_buf : city_jp=city_jp_buf : city_id=city_id_buf
		timedif=timedif_buf : summertime_start=summertime_start_buf : summertime_end=summertime_end_buf
		fontcolor=fontcolor_buf
		from_game1=0
		goto*clicked_city
	}
	if 940<= mousex & 970 >= mousex and 5<= mousey & 25 >= mousey{
		goto*earth_clock
	}
	if 970<= mousex & 1000 >= mousex and 5<= mousey & 25 >= mousey{
		goto*about
	}
	if 1000<= mousex & 1024 >= mousex and 5<= mousey & 25 >= mousey{
		goto*exit
	}
	
//答え合わせ
	if games=1 and 400<= mousey & 420 >= mousey and status="question"{
		if 262<= mousex & 412 >= mousex{
			if select_g1.0=correct : goto*game1_correct :else: goto*game1_mistake
		}
		if 422<= mousex & 572 >= mousex{
			if select_g1.1=correct : goto*game1_correct :else: goto*game1_mistake
		}
		if 582<= mousex & 732 >= mousex{
			if select_g1.2=correct : goto*game1_correct :else: goto*game1_mistake
		}
	}
	
	if games=1 and status="correct" and 407<= mousex & 507 >= mousex and 430<= mousey & 450 >= mousey{
		goto*game1
	}
	if games=1 and status="mistake" and 407<= mousex & 507 >= mousex and 430<= mousey & 450 >= mousey{
		goto*game1
	}
	
	if games=2 and 400<= mousey & 420 >= mousey and status="question"{
		if gametype="select3"{
			if 262<= mousex & 412 >= mousex{
				if select(no.0)=correct : goto*game2_correct :else: goto*game2_mistake
			}
			if 422<= mousex & 572 >= mousex{
				if select(no.1)=correct : goto*game2_correct :else: goto*game2_mistake
			}
			if 582<= mousex & 732 >= mousex{
				if select(no.2)=correct : goto*game2_correct :else: goto*game2_mistake
			}
		}
	}
	if games=2 and gametype="input" and status="question"{
		if 572<= mousex & 612 >= mousex and 400<= mousey & 440 >= mousey{
	
			repeat 10
				notesel quiz0
				noteget correct, cnt
				if input_city=correct and input_city ! "" : goto*game2_correct
		
				await 1
			loop
		
			goto*game2_mistake
		}
	}
	
	if games=2 and status="correct" and 407<= mousex & 507 >= mousex and 430<= mousey & 450 >= mousey{
		goto*game2
	}
	if games=2 and status="mistake" and 407<= mousex & 507 >= mousex and 430<= mousey & 450 >= mousey{
		goto*game2
	}
	
	if games=3 and 400<= mousey & 420 >= mousey and status="question"{
		if gametype="select3"{
			if 262<= mousex & 412 >= mousex{
				if select(no.0)=correct : goto*game3_correct :else: goto*game3_mistake
			}
			if 422<= mousex & 572 >= mousex{
				if select(no.1)=correct : goto*game3_correct :else: goto*game3_mistake
			}
			if 582<= mousex & 732 >= mousex{
				if select(no.2)=correct : goto*game3_correct :else: goto*game3_mistake
			}
		}
	}
	if games=3 and gametype="input"{
		if 572<= mousex & 612 >= mousex and 400<= mousey & 440 >= mousey{
			if input_city=correct : goto*game3_correct :else: goto*game3_mistake
		}
	}
	if games=3 and status="correct" and 407<= mousex & 507 >= mousex and 430<= mousey & 450 >= mousey{
		goto*game3
	}
	if games=3 and status="mistake" and 407<= mousex & 507 >= mousex and 430<= mousey & 450 >= mousey{
		goto*game3
	}
	
//Wikipedia

	if games=1 and 517<= mousex & 617 >= mousex and 430<= mousey & 450 >= mousey{
		exec "https://ja.wikipedia.org/wiki/"+city_jp+"",16
		stop
	}
	if status="correct" and games=2 and 517<= mousex & 617 >= mousex and 430<= mousey & 450 >= mousey{
		exec "https://ja.wikipedia.org/wiki/"+correct+"",16
		stop
	}
	if status="correct" and games=3 and 517<= mousex & 617 >= mousex and 430<= mousey & 450 >= mousey{
		split quiz,"は",the_city_name	;都市名抜き出し（不正解だった時のみ）
		exec "https://ja.wikipedia.org/wiki/"+the_city_name+"",16
		stop
	}
	if status="mistake" and games=2 and 517<= mousex & 617 >= mousex and 430<= mousey & 450 >= mousey{
		exec "https://ja.wikipedia.org/wiki/"+correct+"",16
		stop
	}
	if status="mistake" and games=3 and 517<= mousex & 617 >= mousex and 430<= mousey & 450 >= mousey{
		split quiz,"は",the_city_name	;都市名抜き出し（不正解だった時のみ）
		exec "https://ja.wikipedia.org/wiki/"+the_city_name+"",16
		stop
	}
	
	if status="result" and 462<= mousex & 562 >= mousex and 470<= mousey & 490 >= mousey{
		goto*game2_result2
	}
	
	gosub*idou
	return
	
*game1_random	;問題の順番をランダムに振り分け
	if level=1 : total_quizzes=5
	if level=2 : total_quizzes=10
	if level=3 or 4 : total_quizzes=20
	
	randomize
	repeat total_quizzes
		random_city_id.cnt=rnd(40)				;ランダムに出題する都市を決める
		correct_answer_button.cnt=rnd(3)		;正解のボタンの位置
	wait 1
	loop
	
	number=0
	
*game1
	if level=1 and number>4:goto*game1_result
	if level=2 and number>9:goto*game1_result
	if level=3 and number>19:goto*game1_result
	if level=4 and number>19:goto*game1_result
	
	onkey 0
	onclick gosub*click_game
	
	status="question"
	
	color 230,230,230:boxf
	font "Noto Sans CJK SC Light",14 : color : pos 10,3:mes"World Timepiece"
	pos 910,5:gmode 0:gcopy 5,0,20,20,20	;ゲームボタン
	pos 940,5:gmode 0:gcopy 14,0,20,20,20	;地球時計
	pos 970,5:gmode 0:gcopy 13,0,20,20,20	;情報
	pos 1000,5:gmode 0:gcopy 1,0,20,20,20	;閉じるボタン
	
	games=1
	
	//都市の時差情報を取得
	notesel timedif_dat
	noteload "data/timedif.dat"
	
	tcnt = 0
	
	repeat notemax
		notesel timedif_dat
		noteget timedif_city_name_buf, cnt
		
		if timedif_city_name_buf = "city_id : "+random_city_id.number+"" {
			tcnt = cnt
			break
		}
	
		await 1
	loop
	
	tcnt - 3
	
	;その都市にサマータイムがあるか取得
	notesel timedif_dat
	noteget summer_time_exist, (tcnt+5)
	split summer_time_exist, " : ", not_use, summer_time_exist
	summer_time_exist = int(summer_time_exist)
	
	sdim about_city, 1
	
	if summer_time_exist = 1 {		;サマータイムがある場合
	
		dim timedif_buf, 13
	
		repeat 15
			notesel timedif_dat
	
			if cnt <= 1 {
				noteget about_city.cnt, (cnt+tcnt+1)
				split about_city.cnt, " : ", not_use, about_city.cnt
			}
			
			if cnt >= 2 {
				noteget timedif_buf.(cnt-2), (cnt+tcnt+1)
	
				;夏時間の始まり・終わりが「最終日曜日」の場合は、ひとまず"last"を"7"に置き換え
				;"last"はsummer_start_week_numberまたはsummer_finish_week_numberで夏時間が始まる・終わる日が最終日曜日であることを示す
				split timedif_buf.(cnt-2), " : ", not_use, timedif_buf.(cnt-2)
				if timedif_buf.(cnt-2) = "last" : timedif_buf.(cnt-2) = "7"
			}
			await 1
		loop
	
		random_city = about_city.0
		random_city_jp = about_city.1
		
		random_city_id = int(timedif_buf.0)
		random_timedif = double(timedif_buf.1)
			random_timedif_st = timedif		;標準時の時差
		
		summer_start_month = int(timedif_buf.3)
		summer_start_week_number = int(timedif_buf.4)
		summer_start_week = int(timedif_buf.5)
		summer_start_time = int(timedif_buf.6)
		summer_finish_month = int(timedif_buf.7)
		summer_finish_week_number = int(timedif_buf.8)
		summer_finish_week = int(timedif_buf.9)
		summer_finish_time = int(timedif_buf.10)
		hemisphere = timedif_buf.11
		
	}else{							;サマータイムがない場合
	
		dim timedif_buf, 3
		
		repeat 6
			notesel timedif_dat
	
			if cnt <= 1 {
				noteget about_city.cnt, (cnt+tcnt+1)
				split about_city.cnt, " : ", not_use, about_city.cnt
			}
			
			if cnt >= 2 {
				noteget timedif_buf.(cnt-2), (cnt+tcnt+1)
				split timedif_buf.(cnt-2), " : ", not_use, timedif_buf.(cnt-2)
			}
			await 1
		loop
		
		random_city = about_city.0
		random_city_jp = about_city.1
		
		random_city_id = int(timedif_buf.0)
		random_timedif = double(timedif_buf.1)
		
	}
	
	if offline_mode = 0 and return_to_display = 0 {
		#include "hspinet.as"
		netinit
		neturl "http://ntp-a1.nict.go.jp/cgi-bin/"
		netrequest_get "json"
		repeat
			netexec res
			if res>0 : break
			await 50
		loop
		netgetv buf
		lf="0"
		poke lf,0,10
		strrep buf,lf,"\n"
		jsonopen p1,buf
		jsongeti time,"st",p1
		day=time/86400
		time+=3600*9
		time\=86400
		jhour=time/3600
		jminute=(time/60)\60
		jsecond=time\60 + 1			;最初はたいてい1秒ずれるのであらかじめ1秒足しておく（毎分0秒になると直ります）
	
		;夏時間がある場合は夏時間の期間内かどうかを判断
		if summer_time_exist = 1 {
			
			hour = jhour + random_timedif_st				;一旦標準時に戻す
			if hour < 0 {	;表示する時間がマイナスになった場合
				hour = hour+24
			}
			if hour > 23{	;表示する時間が24時以上になった場合
				hour = hour-24
			}
			
			gosub*get_summer_time
		}
		
		hour = random_timedif + jhour
	}
	
	//時刻をパソコンから取得（オフラインモード適用時）
	if offline_mode = 1 and return_to_display = 0 {
		jhour = gettime(4)
		jminute = gettime(5)
		jsecond = gettime(6)
	
		;夏時間がある場合は夏時間の期間内かどうかを判断
		if summer_time_exist = 1 {
			
			hour = jhour + random_timedif_st				;一旦標準時に戻す
			gosub*get_summer_time
		}
		
		hour = random_timedif + jhour
	}
	
	if jsecond >= 60 {
		jminute ++
		jsecond = 0
	}
	if jminute >= 60 {
		jhour ++
		jminute = 0
	}
	if jhour >= 24 {
		jhour = 0
	}
	
	second = jsecond
	minute = jminute
		
	if random_timedif = -3.5 {		;UTC5:30（インド時間）の場合
		minute= jminute - 30
		if minute >= 0 : hour = jhour - 3
		if minute <  0 : hour = jhour - 4
		
		if minute < 0  : minute = minute + 60
		if minute > 59 : minute = minute - 60
	}
	
	if second > 59 {
		second = 0
	}
	if minute > 59 {
		minute = 0
	}
	
	;夏時間がある場合は夏時間を取得（毎時0分）
	if summer_time_exist = 1 and minute = 0 and second = 0 and jti = 0 {
		oncmd 0
		
		hour = jhour + random_timedif_st				;一旦標準時に戻す
		gosub *get_summer_time					;*get_summer_timeにて夏時間期間中か判定
	}
		
	if jsecond = 0 {
		hour = jhour + random_timedif
	}
	
	if hour < 0 {	;表示する時間がマイナスになった場合
		hour = hour+24
	}
	if hour > 23{	;表示する時間が24時以上になった場合
		hour = hour-24
	}
	
	correct=int(hour)	;注：出題するのは○時(hour)のみ、○分(minute)は全選択肢で同じにします
	
	//各選択肢に表示する時刻を決める
	select_g1.(correct_answer_button.number)=correct
	
	if correct_answer_button.number=0{
		randomize
		repeat
		select_g1.1=rnd(24)
		select_g1.2=rnd(24)
		if select_g1.0 ! select_g1.1 ! select_g1.2 : break
		wait 1
		loop
	}
	if correct_answer_button.number=1{
		randomize
		repeat
		select_g1.0=rnd(24)
		select_g1.2=rnd(24)
		if select_g1.0 ! select_g1.1 ! select_g1.2 : break
		wait 1
		loop
	}
	if correct_answer_button.number=2{
		randomize
		repeat
		select_g1.0=rnd(24)
		select_g1.1=rnd(24)
		if select_g1.0 ! select_g1.1 ! select_g1.2 : break
		wait 1
		loop
	}
	
	//ヒント（レベル4の場合はヒント無し）
	if level=1 : hinto="ヒント：日本と"+random_city_jp+"の時差は"+int(random_timedif)+"時間です。"
	if level=1 and int(random_timedif)>0 : hinto="ヒント：日本と"+random_city_jp+"の時差は+"+int(random_timedif)+"時間です。"
	
	if level=2 or level=3 : hinto="ヒント："+random_city_jp+"はUTC"+(9 + int(random_timedif))+"です。"
	if (level=2 or level=3) and (9 + int(random_timedif))>=0 : hinto="ヒント："+random_city_jp+"はUTC+"+(9 + int(random_timedif))+"です。"
	
	if level=4 : hinto=""
	
	//都市がデリーだった場合、ヒントの内容を少し変える
	if level=1 and random_city_jp="デリー" : hinto="ヒント：日本と"+random_city_jp+"の時差は-3時間30分です。"
	if level=2 or level=3 and city_jp="デリー" : hinto="ヒント："+random_city_jp+"はUTC5:30です。"
	
	//問題の表示
	x=1024
	gsk_x=465
	
	y=640
	gsk_y=123
	
	repeat
		redraw 0
		
		color 230,230,230:boxf 0,25,1024,640
		
		x=x-gsk_x
		gsk_x=gsk_x/2
		
		font "Noto Sans CJK SC Light",30
		color 0,142,148 : cmes ""+random_city_jp+"の現地時刻は何時何分でしょう？" ,x,200,x+824,500
		font "Noto Sans CJK SC Light",14
		color 0,142,148 : cmes ""+hinto+"" ,x,250,x+824,500
	
		y=y-gsk_y
		gsk_y=gsk_y/2
		font "Noto Sans CJK SC Light",14
		pos 262,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select_g1.0+":"+minute+"",262,y-2,412,y+20
		pos 422,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select_g1.1+":"+minute+"",422,y-2,572,y+20
		pos 582,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select_g1.2+":"+minute+"",582,y-2,732,y+20
	
		if gsk_x=0:break
		
		redraw 1
		wait 4
	loop
	
	redraw 0
	
	color 230,230,230:boxf 0,25,1024,640
	
	font "Noto Sans CJK SC Light",30
	color 0,142,148 : cmes ""+random_city_jp+"の現地時刻は何時何分でしょう？" ,0,200,1024,500
	font "Noto Sans CJK SC Light",14
	color 0,142,148 : cmes ""+hinto+"" ,0,250,1024,500
	
	font "Noto Sans CJK SC Light",14
	pos 262,400:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select_g1.0+":"+minute+"",262,400-2,412,420
	pos 422,400:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select_g1.1+":"+minute+"",422,400-2,572,420
	pos 582,400:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select_g1.2+":"+minute+"",582,400-2,732,420
		
	redraw 1
	
	stop
*game1_correct
	status="correct"
	correct_total=correct_total+1
	number=number+1
	goto*game1_check
*game1_mistake
	status="mistake"
	number=number+1
	goto*game1_check
*game1_check
	clrobj
	
	gsk_x=465
	gsk_y=123
	
	x2=1024
	gsk_x2=295
	
	y2=640
	gsk_y2=170
	
	repeat
		redraw 0
		
		color 230,230,230:boxf 0,25,1024,640
		
		x=x-gsk_x
		gsk_x=gsk_x/2
		
		font "Noto Sans CJK SC Light",30
		color 0,142,148 : cmes ""+random_city_jp+"の現地時刻は何時何分でしょう？" ,x,200,x+824,500
		font "Noto Sans CJK SC Light",14
		color 0,142,148 : cmes ""+hinto+"" ,x,250,x+824,500
	
		y=y+gsk_y
		gsk_y=gsk_y/2
	
		font "Noto Sans CJK SC Light",14
		pos 262,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select_g1.0+":"+minute+"",262,y-2,412,y+20
		pos 422,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select_g1.1+":"+minute+"",422,y-2,572,y+20
		pos 582,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select_g1.2+":"+minute+"",582,y-2,732,y+20
	
		x2=x2-gsk_x2
		gsk_x2=gsk_x2/2
	
		if status="correct" : pos x2,150:gmode 2:gcopy 10,0,0,150,150
		if status="mistake" : pos x2,150:gmode 2:gcopy 11,0,0,150,150
	
		y2=y2-gsk_y2
		gsk_y2=gsk_y2/2
	
		color 0,142,148
	
		font "Noto Sans CJK SC Light",24
		if status="correct" : cmes "正解!",0,y2+10,1024,640
		if status="mistake" : cmes "不正解!",0,y2+10,1024,640
		
		font "Noto Sans CJK SC Light",16
		cmes ""+random_city_jp+"の現地時刻は"+correct+":"+minute+"でした！",0,y2+60,1024,640
	
		font "Noto Sans CJK SC Light",14
		pos 407,y2+135:gcopy 9,0,0,100,20 : color 255,255,255:cmes"次へ",407,y2+135-2,507,y+155
		pos 517,y2+135:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Wikipedia",517,y2+135-2,617,y+155
	
		if gsk_x2=0:break
		
		redraw 1
		wait 4
	loop
	
	redraw 0
	
	color 230,230,230:boxf 0,25,1024,640
	if status="correct" : pos 437,150:gmode 2:gcopy 10,0,0,150,150
	if status="mistake" : pos 437,150:gmode 2:gcopy 11,0,0,150,150
	
	color 0,142,148
	font "Noto Sans CJK SC Light",24
	if status="correct" : cmes "正解!",0,310,1024,400
	if status="mistake" : cmes "不正解!",0,310,1024,400
	
	font "Noto Sans CJK SC Light",16
	cmes ""+random_city_jp+"の現地時刻は"+correct+":"+minute+"でした！",0,360,1024,640
	
	font "Noto Sans CJK SC Light",14
	pos 407,435:gcopy 9,0,0,100,20 : color 255,255,255:cmes"次へ",407,435-2,507,455
	pos 517,435:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Wikipedia",517,435-2,617,455
	
	redraw 1
	
	stop
*game1_result
	x=1024
	gsk_x=465
	
	status="result"
	
	repeat
		redraw 0
		
		color 230,230,230:boxf 0,25,1024,640
		
		x=x-gsk_x
		gsk_x=gsk_x/2
		
		font "Noto Sans CJK SC Light",30
		color 0,142,148 : cmes "結果発表" ,x,200,x+824,500
	
		if gsk_x=0:break
	
		redraw 1
		wait 4
	loop
	
	wait 1
	
	y=640
	gsk_y=170
	
	repeat
		redraw 0
	
		color 230,230,230:boxf 0,300,1024,640
		y=y-gsk_y
		gsk_y=gsk_y/2
	
		if level=1{
			if correct_total=0 : class="ちり紙級\n\n時差の計算ができるようになりましょう。"
			if 1<= correct_total & 2 >= correct_total : class="小学生級\n\nまだまだです。"
			if 3<= correct_total & 4 >= correct_total : class="中学生級\n\n惜しいです。もう一息！"
			if correct_total=5 : class="高校生級\n\nパーフェクトです。上位のレベルにも挑戦してみましょう。"
		}
		if level=2{
			if correct_total=0 : class="ミミズ級\n\nUTCの数値を日本時間から足し引きすれば求められますよ。"
			if 1<= correct_total & 3 >= correct_total : class="モグラ級\n\n時差の計算に慣れましょう！"
			if 4<= correct_total & 7 >= correct_total : class="ヘビ級\n\nこの調子で頑張りましょう。"
			if 8<= correct_total & 9 >= correct_total : class="キツネ級\n\nなかなかよい出来です。\nパーフェクトを目指して頑張りましょう。"
			if correct_total=10 : class="鷲級\n\nパーフェクトです。上位のレベルにも挑戦してみましょう。"
		}
	
		if level=3{
			if correct_total=0 : class="平社員級\nもっと上を目指してみましょう。"
			if 1<= correct_total & 5 >= correct_total : class="係長級\n\n落ち着いて計算しましょう。"
			if 6<= correct_total & 15 >= correct_total : class="課長級\n\n何度も繰り返してパーフェクトを目指しましょう。"
			if 16<= correct_total & 19 >= correct_total : class="部長級\n\nもう少し頑張れば社長になれますよ。"
			if correct_total=20 : class="社長級\n\nパーフェクトです。威張っても大丈夫でしょう。"
		}
	
		if level=4{
			if correct_total=0 : class="赤ちゃん級\n\n時差の計算ができるようになりましょう。"
			if 1<= correct_total & 5 >= correct_total : class="高校生級\n\n少しづつ時差の計算に慣れてみましょう。。"
			if 6<= correct_total & 15 >= correct_total : class="そこそこの大学生級\n\nこの調子で頑張りましょう。"
			if 16<= correct_total & 19 >= correct_total : class="エリートを目指す社会人級\n\nなかなかよい出来です。\nパーフェクトを目指して頑張りましょう。"
			if correct_total=20 : class="エリート級\n\nパーフェクトです。あなたは世界を知り尽くした人です。"
		}
	
		font "Noto Sans CJK SC Light",26
		if level=1 : color 0,142,148 : cmes "正答数"+correct_total+"問 /5問\n" ,200,y,824,640
		if level=2 : color 0,142,148 : cmes "正答数"+correct_total+"問 /10問\n" ,200,y,824,640
		if level=3 or level=4 : color 0,142,148 : cmes "正答数"+correct_total+"問 /20問\n" ,200,y,824,640
	
		font "Noto Sans CJK SC Light",18
		color 0,142,148 : cmes class ,200,y+40,824,640
	
		font "Noto Sans CJK SC Light",14
		pos 462,y+165:gcopy 9,0,0,100,20 : color 255,255,255:cmes"次へ",462,y+165-2,562,y+185
	
		if gsk_y=0:break
		
		redraw 1
		wait 4
	loop
	
	stop
*game1_result2
	notesel data
	noteload "data/record.dat"
	noteget point,1
	
	if level=4 : correct_total=int(correct_total)*2	;レベル4ではポイント2倍
	point=int(point)+int(correct_total)
	noteadd str(point),1,1
	notesave "data/record.dat"
	
	place_pos0=int(point)/30
	
	place_pos_minus=int(point)/1230*41
	place_pos0=place_pos0-place_pos_minus 			;一周した場合はスタート地点にもどる
	
	notesel travel
	noteload"data/travel.dat"
	noteget place,place_pos0
	
	split place,"(",place,place_pos
	
	place_pos=strmid (place_pos,0,instr(place_pos,0,")"))
	split place_pos,",",place_pos_x,place_pos_y
	place_pos_x=int(place_pos_x)
	place_pos_y=int(place_pos_y)
	
	x=1024
	gsk_x=465
	
	status="result2"
	from_game1 = 0
	
	repeat
		redraw 0
		
		color 230,230,230:boxf 0,25,1024,640
		
		x=x-gsk_x
		gsk_x=gsk_x/2
		
		font "Noto Sans CJK SC Light",30
		color 0,142,148 : cmes "現在のポイント "+point+" pt" ,x,100,x+824,500
	
		if gsk_x=0:break
	
		redraw 1
		wait 4
	loop
	
	wait 1
	
	y=640
	gsk_y=240
	
	repeat
		redraw 0
	
		color 230,230,230:boxf 0,140,1024,640
		y=y-gsk_y
		gsk_y=gsk_y/2
	
		font "Noto Sans CJK SC Light",26
		color 0,142,148 : cmes "現在地　"+place+"" ,200,y,824,640
	
		pos 92,y+35:gmode 0:gcopy 12,0,0,840,400
	
		color 255,127,39 : circle place_pos_x-3+92 , place_pos_y-3+y+35 , place_pos_x+3+92 , place_pos_y+3+y+35
	
		if gsk_y=0:break
		
		redraw 1
		wait 4
	loop
	
	pos 462,580:objimage 9:objsize 100,20:button"OK",*game
	
	stop
	
*game2_random	;問題の順番をランダムに振り分け
	notesel quiz0
	noteload"data/game2.quiz"
	noteget total_quizzes,(level+1)	;クイズの全問題数
	
	total_quizzes=int(total_quizzes)
	
	randomize
	dim quiz_no,total_quizzes
	repeat total_quizzes
		r=rnd(cnt+1)
		quiz_no(cnt)=quiz_no(r)
		quiz_no(r)=cnt
	loop
	
	number=0
	
*game2
	if level=1 and number>4:goto*game2_result
	if level=2 and number>9:goto*game2_result
	if level=3 and number>19:goto*game2_result
	if level=4 and number>19:goto*game2_result
	
	onkey gosub *game2_key
	onclick gosub*click_game
	
	status="question"
	
	color 230,230,230:boxf
	font "Noto Sans CJK SC Light",14 : color : pos 10,3:mes"World Timepiece"
	pos 910,5:gmode 0:gcopy 5,0,20,20,20	;ゲームボタン
	pos 940,5:gmode 0:gcopy 14,0,20,20,20	;地球時計
	pos 970,5:gmode 0:gcopy 13,0,20,20,20	;情報
	pos 1000,5:gmode 0:gcopy 1,0,20,20,20	;閉じるボタン
	
	if level ! 4 {
		notesel question
		noteload"data/game2.quiz"
	}
	if level = 4 {
		notesel question
		noteload"data/game2-4.quiz"
	}
	
	games=2
	if level=1 | level=2 | level=3 : gametype="select3"
	if level=4 : gametype="input"
	
	if level=1                        :  question_start = instr (question,0,""+quiz_no.number+"{") + strlen(""+quiz_no.number+"") +2
	if level=2 and quiz_no.number<10  :  question_start = instr (question,0,"10"+quiz_no.number+"{") + strlen("10"+quiz_no.number+"") +2
	if level=2 and quiz_no.number>10  :  question_start = instr (question,0,"1"+quiz_no.number+"{") + strlen("1"+quiz_no.number+"") +2
	if level=3 and quiz_no.number<10  :  question_start = instr (question,0,"20"+quiz_no.number+"{") + strlen("20"+quiz_no.number+"") +2
	if level=3 and quiz_no.number>10  :  question_start = instr (question,0,"2"+quiz_no.number+"{") + strlen("2"+quiz_no.number+"") +2
	if level=4						  :  question_start = instr (question,0,""+quiz_no.number+"{") + strlen(""+quiz_no.number+"") +2
	
	question_end = instr (question,question_start,"}")
	quiz0 = strmid (question,question_start,question_end)
	
	notesel quiz0
	noteget quiz,0
	noteget correct,1
	if level=1 or level=2 or level=3{
		noteget mistake(0),2
		noteget mistake(1),3
		noteget mistake(2),4
		noteget mistake(3),5
		noteget mistake(4),6
		noteget mistake(5),7
	}
	noteget explanation,8
	
	if level = 4 {
		notesel quiz0
		noteget explanation, notemax - 1
	}
	
	strrep 	explanation,"\\n","\n"	;改行
	
	if level=1 or level=2 or level=3{
		randomize
		dim mis_no,6
		repeat 6
			r=rnd(cnt+1)
			mis_no(cnt)=mis_no(r)
			mis_no(r)=cnt
		loop
	
		select.0=correct
		select.1=mistake(mis_no.0)
		select.2=mistake(mis_no.1)
	
		randomize
		dim no,3
		repeat 3
			r=rnd(cnt+1)
			no(cnt)=no(r)
			no(r)=cnt
		loop
	}
	
	x=1024
	gsk_x=465
	
	y=640
	gsk_y=123
	
	repeat_finish = 0		;repeat内の処理がまだ終わっていないことを示す
	
	repeat
		redraw 0
		
		color 230,230,230:boxf 0,25,1024,640
		
		x=x-gsk_x
		gsk_x=gsk_x/2
		
		font "Noto Sans CJK SC Light",30
		color 0,142,148 : cmes quiz ,x,200,x+824,500
	
		y=y-gsk_y
		gsk_y=gsk_y/2
	
		if level=1 or level=2 or level=3{
			font "Noto Sans CJK SC Light",14
			pos 262,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.0)+"",262,y-2,412,y+20
			pos 422,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.1)+"",422,y-2,572,y+20
			pos 582,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.2)+"",582,y-2,732,y+20
		}
		if level=4{
			clrobj

			input_city=""
			objsize 160,40
			font "Noto Sans CJK SC Light",24 : objmode 2
			pos 412,y : input input_city
			pos 572,y : gcopy 9,0,0,40,40 : color 255,255,255 : cmes"OK",572,y-2,612,y+40
		}
	
		if gsk_x=0:break
		
		redraw 1
		wait 4
	loop
	
	repeat_finish = 1		;repeat内の処理が終わったことを示す
	
	redraw 0
	
	color 230,230,230:boxf 0,25,1024,640
	
	font "Noto Sans CJK SC Light",30
	color 0,142,148 : cmes quiz ,0,200,1024,500
	
	if level=1 or level=2 or level=3{
		font "Noto Sans CJK SC Light",14
		pos 262,400:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.0)+"",262,400-2,412,420
		pos 422,400:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.1)+"",422,400-2,572,420
		pos 582,400:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.2)+"",582,400-2,732,420
	}
	if level=4{
			clrobj
			input_city=""
			objsize 160,40
			font "Noto Sans CJK SC Light",24 : objmode 2
			pos 412,400 : input input_city : objsel stat	;入力ボックスにフォーカス移動
			pos 572,400 : gcopy 9,0,0,40,40 : color 255,255,255 : cmes"OK",572,398,612,440
		}
		
	redraw 1
	
	stop
*game2_correct
	status="correct"
	correct_total=correct_total+1
	number=number+1
	goto*game2_check
*game2_mistake
	status="mistake"
	number=number+1
	goto*game2_check
	
*game2_check
	clrobj
	
	gsk_x=465
	gsk_y=123
	
	x2=1024
	gsk_x2=295
	
	y2=640
	gsk_y2=170
	
	repeat_finish = 0		;repeat内の処理がまだ終わっていないことを示す
	
	repeat
		redraw 0
		
		color 230,230,230:boxf 0,25,1024,640
		
		x=x-gsk_x
		gsk_x=gsk_x/2
		
		font "Noto Sans CJK SC Light",30
		color 0,142,148 : cmes quiz ,x,200,x+824,500
	
		y=y+gsk_y
		gsk_y=gsk_y/2
	
		if level=1 or level=2 or level=3{
			font "Noto Sans CJK SC Light",14
			pos 262,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.0)+"",262,y-2,412,y+20
			pos 422,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.1)+"",422,y-2,572,y+20
			pos 582,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.2)+"",582,y-2,732,y+20
		}
		if level=4{
			clrobj
			input_city=""
			objsize 160,40
			font "Noto Sans CJK SC Light",24 : objmode 2
			pos 412,y : input input_city
			font "Noto Sans CJK SC Light",20
			pos 572,y : gcopy 9,0,0,40,40 : color 255,255,255 : cmes"OK",572,y-2,612,y+40
		}
	
		x2=x2-gsk_x2
		gsk_x2=gsk_x2/2
	
		if status="correct" : pos x2,150:gmode 2:gcopy 10,0,0,150,150
		if status="mistake" : pos x2,150:gmode 2:gcopy 11,0,0,150,150
	
		y2=y2-gsk_y2
		gsk_y2=gsk_y2/2
	
		color 0,142,148
	
		font "Noto Sans CJK SC Light",24
		if status="correct" : cmes "正解!",0,y2+10,1024,640
		if status="mistake" : cmes "不正解!",0,y2+10,1024,640
		
		font "Noto Sans CJK SC Light",16
		cmes explanation,0,y2+60,1024,640
	
		font "Noto Sans CJK SC Light",14
		pos 407,y2+135:gcopy 9,0,0,100,20 : color 255,255,255:cmes"次へ",407,y2+135-2,507,y+155
		pos 517,y2+135:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Wikipedia",517,y2+135-2,617,y+155
	
		if gsk_x2=0 : break
		
		redraw 1
		wait 2
	loop
	
	repeat_finish = 1		;repeat内の処理が終わったことを示す
	
	redraw 0
	
	color 230,230,230:boxf 0,25,1024,640
	if status="correct" : pos 437,150:gmode 2:gcopy 10,0,0,150,150
	if status="mistake" : pos 437,150:gmode 2:gcopy 11,0,0,150,150
	
	color 0,142,148
	font "Noto Sans CJK SC Light",24
	if status="correct" : cmes "正解!",0,310,1024,400
	if status="mistake" : cmes "不正解!",0,310,1024,400
	
	font "Noto Sans CJK SC Light",16
	cmes explanation,0,360,1024,640
	
	font "Noto Sans CJK SC Light",14
	pos 407,435:gcopy 9,0,0,100,20 : color 255,255,255:cmes"次へ",407,435-2,507,455
	pos 517,435:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Wikipedia",517,435-2,617,455
	
	redraw 1
	
	stop
*game2_result
	x=1024
	gsk_x=465
	
	status="result"
	
	objmode 1
	
	repeat_finish = 0		;repeat内の処理がまだ終わっていないことを示す
	
	repeat
		redraw 0
		
		color 230,230,230:boxf 0,25,1024,640
		
		x=x-gsk_x
		gsk_x=gsk_x/2
		
		font "Noto Sans CJK SC Light",30
		color 0,142,148 : cmes "結果発表" ,x,200,x+824,500
	
		if gsk_x=0:break
	
		redraw 1
		wait 4
	loop
	
	repeat_finish = 1		;repeat内の処理が終わったことを示す
	
	wait 1
	
	y=640
	gsk_y=170
	
	repeat
		redraw 0
	
		color 230,230,230:boxf 0,300,1024,640
		y=y-gsk_y
		gsk_y=gsk_y/2
	
		if level=1{
			if correct_total=0 : class="赤ちゃん級\n\n完全に勉強不足です。"
			if 1<= correct_total & 2 >= correct_total : class="小学生級\n\nまだまだです。"
			if 3<= correct_total & 4 >= correct_total : class="高校生級\n\n惜しいです。もう一息！"
			if correct_total=5 : class="社会人級\n\nパーフェクトです。上位のレベルにも挑戦してみましょう。"
		}
		if level=2{
			if correct_total=0 : class="宇宙人級\n\nもっと地球のことを知りましょう。"
			if 1<= correct_total & 3 >= correct_total : class="地底人級\n\nもっと地上の世界のことを知りましょう。"
			if 4<= correct_total & 7 >= correct_total : class="日本人級\n\nこの調子で頑張りましょう。"
			if 8<= correct_total & 9 >= correct_total : class="アジア人級\n\nなかなかよい出来です。\nパーフェクトを目指して頑張りましょう。"
			if correct_total=10 : class="地球人級\n\nパーフェクトです。上位のレベルにも挑戦してみましょう。"
		}
	
		if level=3{
			if correct_total=0 : class="幼稚園児級\n\nもっと人間界のことを知りましょう。"
			if 1<= correct_total & 5 >= correct_total : class="中学生級\n\n世界にもっと関心を持ちましょう。少しづつでいいのです。"
			if 6<= correct_total & 15 >= correct_total : class="一般社会人級\n\n何度も繰り返してパーフェクトを目指しましょう。"
			if 16<= correct_total & 19 >= correct_total : class="政治家級\n\nもう少し頑張れば大統領になれますよ。"
			if correct_total=20 : class="大統領級\n\nパーフェクトです。威張っても大丈夫でしょう。"
		}
	
		if level=4{
			if correct_total=0 : class="昆虫級\n\nもっと人間界のことを知りましょう。"
			if 1<= correct_total & 5 >= correct_total : class="鳥類級\n\nたまには羽を休めることも必要です。\nもっと地上の世界のことを知りましょう。"
			if 6<= correct_total & 15 >= correct_total : class="渡り鳥級\n\nこの調子で頑張りましょう。"
			if 16<= correct_total & 19 >= correct_total : class="雲級\n\nなかなかよい出来です。\nパーフェクトを目指して頑張りましょう。"
			if correct_total=20 : class="仙人級\n\nパーフェクトです。あなたは世界を知り尽くした人です。"
		}
	
		font "Noto Sans CJK SC Light",26
		if level=1 : color 0,142,148 : cmes "正答数"+correct_total+"問 /5問\n" ,200,y,824,640
		if level=2 : color 0,142,148 : cmes "正答数"+correct_total+"問 /10問\n" ,200,y,824,640
		if level=3 or level=4 : color 0,142,148 : cmes "正答数"+correct_total+"問 /20問\n" ,200,y,824,640
	
		font "Noto Sans CJK SC Light",18
		color 0,142,148 : cmes class ,200,y+40,824,640
	
		font "Noto Sans CJK SC Light",14
		pos 462,y+165:gcopy 9,0,0,100,20 : color 255,255,255:cmes"次へ",462,y+165-2,562,y+185
	
		if gsk_y=0:break
		
		redraw 1
		wait 4
	loop
	
	stop
*game2_result2
	notesel data
	noteload "data/record.dat"
	noteget point,1
	
	if level=4 : correct_total=int(correct_total)*2	;レベル4ではポイント2倍
	point=int(point)+int(correct_total)
	noteadd str(point),1,1
	notesave "data/record.dat"
	
	place_pos0=int(point)/30
	
	place_pos_minus=int(point)/1230*41
	place_pos0=place_pos0-place_pos_minus 			;一周した場合はスタート地点にもどる
	
	notesel travel
	noteload"data/travel.dat"
	noteget place,place_pos0
	
	split place,"(",place,place_pos
	
	place_pos=strmid (place_pos,0,instr(place_pos,0,")"))
	split place_pos,",",place_pos_x,place_pos_y
	place_pos_x=int(place_pos_x)
	place_pos_y=int(place_pos_y)
	
	x=1024
	gsk_x=465
	
	status="result2"
	
	repeat_finish = 0		;repeat内の処理がまだ終わっていないことを示す
	
	repeat
		redraw 0
		
		color 230,230,230:boxf 0,25,1024,640
		
		x=x-gsk_x
		gsk_x=gsk_x/2
		
		font "Noto Sans CJK SC Light",30
		color 0,142,148 : cmes "現在のポイント "+point+" pt" ,x,100,x+824,500
	
		if gsk_x=0:break
	
		redraw 1
		wait 4
	loop
	
	repeat_finish = 1		;repeat内の処理が終わったことを示す
	
	wait 1
	
	y=640
	gsk_y=240
	
	repeat_finish = 0		;repeat内の処理がまだ終わっていないことを示す
	
	repeat
		redraw 0
	
		color 230,230,230:boxf 0,140,1024,640
		y=y-gsk_y
		gsk_y=gsk_y/2
	
		font "Noto Sans CJK SC Light",26
		color 0,142,148 : cmes "現在地　"+place+"" ,200,y,824,640
	
		pos 92,y+35:gmode 0:gcopy 12,0,0,840,400
	
		color 255,127,39 : circle place_pos_x-3+92 , place_pos_y-3+y+35 , place_pos_x+3+92 , place_pos_y+3+y+35
	
		if gsk_y=0:break
		
		redraw 1
		wait 4
	loop
	
	repeat_finish = 1		;repeat内の処理が終わったことを示す
	
	pos 462,580:objimage 9:objsize 100,20:button"OK",*game
	
	stop
*game2_key
	if level=4 and status="question" and wparam=13{	;Enterキーが押されたとき
	
		notesel quiz0
	
		repeat_finish = 0		;repeat内の処理がまだ終わっていないことを示す
		
		repeat notemax
			notesel quiz0
			noteget correct, cnt
			if input_city=correct and input_city ! "" : status = "correct" : break
	
			await 1
		loop
	
		repeat_finish = 1		;repeat内の処理が終わったことを示す
	
		if status = "correct" {
			goto*game2_correct
		}else{
			goto*game2_mistake
		}
	
	}
	
	if repeat_finish = 1 {
	
		if status="correct" and  wparam=13{
			gosub*game2
		}
		if status="mistake" and  wparam=13{
			goto*game2
		}
		if status="result" and  wparam=13{
			goto*game2_result2
		}
		if status="result2" and  wparam=13{
			goto*game
		}
	
	}
	return
	
/*--------------------------------------ここからGame3-----------------------------------------*/
	
*game3_random	;問題の順番をランダムに振り分け
	notesel quiz0
	noteload"data/game3.quiz"
	noteget total_quizzes,(level+1)	;クイズの全問題数
	
	total_quizzes=int(total_quizzes)
	
	randomize
	dim quiz_no,total_quizzes
	repeat total_quizzes
		r=rnd(cnt+1)
		quiz_no(cnt)=quiz_no(r)
		quiz_no(r)=cnt
	loop
	
	number=0
	
*game3
	if level=1 and number>4:goto*game3_result
	if level=2 and number>9:goto*game3_result
	if level=3 and number>19:goto*game3_result
	if level=4 and number>19:goto*game3_result
	
	onkey gosub *game3_key
	onclick gosub*click_game
	
	status="question"
	
	color 230,230,230:boxf
	font "Noto Sans CJK SC Light",14 : color : pos 10,3:mes"World Timepiece"
	pos 910,5:gmode 0:gcopy 5,0,20,20,20	;ゲームボタン
	pos 940,5:gmode 0:gcopy 14,0,20,20,20	;地球時計
	pos 970,5:gmode 0:gcopy 13,0,20,20,20	;情報
	pos 1000,5:gmode 0:gcopy 1,0,20,20,20	;閉じるボタン
	
	notesel question
	noteload"data/game3.quiz"
	
	games=3
	if level=1 | level=2 | level=3 : gametype="select3"
	if level=4 : gametype="input"
	
	if level=1 : question_start = instr (question,0,""+quiz_no.number+"{") + strlen(""+quiz_no.number+"") +2
	if level=2 : question_start = instr (question,0,""+int(100+quiz_no.number)+"{") + strlen(""+int(100+quiz_no.number)+"") +2
	if level=3 : question_start = instr (question,0,""+int(200+quiz_no.number)+"{") + strlen(""+int(200+quiz_no.number)+"") +2
	question_end = instr (question,question_start,"}")
	quiz0 = strmid (question,question_start,question_end)
	
	notesel quiz0
	noteget quiz,0
	noteget correct,1
	if level=1 or level=2 or level=3{
		noteget mistake(0),2
		noteget mistake(1),3
		noteget mistake(2),4
		noteget mistake(3),5
		noteget mistake(4),6
		noteget mistake(5),7
	}
	noteget explanation,8
	
	strrep 	explanation,"\\n","\n"	;改行
	
	if level=1 or level=2 or level=3{
		randomize
		dim mis_no,6
		repeat 6
			r=rnd(cnt+1)
			mis_no(cnt)=mis_no(r)
			mis_no(r)=cnt
		loop
	
		select.0=correct
		select.1=mistake(mis_no.0)
		select.2=mistake(mis_no.1)
	
		randomize
		dim no,3
		repeat 3
			r=rnd(cnt+1)
			no(cnt)=no(r)
			no(r)=cnt
		loop
	}
	
	x=1024
	gsk_x=465
	
	y=640
	gsk_y=123
	
	repeat
		redraw 0
		
		color 230,230,230:boxf 0,25,1024,640
		
		x=x-gsk_x
		gsk_x=gsk_x/2
		
		font "Noto Sans CJK SC Light",30
		color 0,142,148 : cmes quiz ,x,200,x+824,500
	
		y=y-gsk_y
		gsk_y=gsk_y/2
	
		if level=1 or level=2 or level=3{
			font "Noto Sans CJK SC Light",14
			pos 262,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.0)+"",262,y-2,412,y+20
			pos 422,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.1)+"",422,y-2,572,y+20
			pos 582,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.2)+"",582,y-2,732,y+20
		}
		if level=4{
			clrobj

			input_city=""
			objsize 160,40
			font "Noto Sans CJK SC Light",24 : objmode 2
			pos 412,y : input input_city
			pos 572,y : gcopy 9,0,0,40,40 : color 255,255,255 : cmes"OK",572,y-2,612,y+40
		}
	
		if gsk_x=0:break
		
		redraw 1
		wait 4
	loop
	
	redraw 0
	
	color 230,230,230:boxf 0,25,1024,640
	
	font "Noto Sans CJK SC Light",30
	color 0,142,148 : cmes quiz ,0,200,1024,500
	
	if level=1 or level=2 or level=3{
		font "Noto Sans CJK SC Light",14
		pos 262,400:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.0)+"",262,400-2,412,420
		pos 422,400:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.1)+"",422,400-2,572,420
		pos 582,400:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.2)+"",582,400-2,732,420
	}
	if level=4{
			clrobj
			input_city=""
			objsize 160,40
			font "Noto Sans CJK SC Light",24 : objmode 2
			pos 412,400 : input input_city : objsel stat	;入力ボックスにフォーカス移動
			pos 572,400 : gcopy 9,0,0,40,40 : color 255,255,255 : cmes"OK",572,398,612,440
		}
		
	redraw 1
	
	stop
*game3_correct
	status="correct"
	correct_total=correct_total+1
	number=number+1
	goto*game3_check
*game3_mistake
	status="mistake"
	number=number+1
	goto*game3_check
	
*game3_check
	clrobj
	
	gsk_x=465
	gsk_y=123
	
	x2=1024
	gsk_x2=295
	
	y2=640
	gsk_y2=170
	
	repeat
		redraw 0
		
		color 230,230,230:boxf 0,25,1024,640
		
		x=x-gsk_x
		gsk_x=gsk_x/2
		
		font "Noto Sans CJK SC Light",30
		color 0,142,148 : cmes quiz ,x,200,x+824,500
	
		y=y+gsk_y
		gsk_y=gsk_y/2
	
		if level=1 or level=2 or level=3{
			font "Noto Sans CJK SC Light",14
			pos 262,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.0)+"",262,y-2,412,y+20
			pos 422,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.1)+"",422,y-2,572,y+20
			pos 582,y:gcopy 9,0,0,150,20 : color 255,255,255:cmes""+select(no.2)+"",582,y-2,732,y+20
		}
		if level=4{
			clrobj
			input_city=""
			objsize 160,40
			font "Noto Sans CJK SC Light",24 : objmode 2
			pos 412,y : input input_city
			font "Noto Sans CJK SC Light",20
			pos 572,y : gcopy 9,0,0,40,40 : color 255,255,255 : cmes"OK",572,y-2,612,y+40
		}
	
		x2=x2-gsk_x2
		gsk_x2=gsk_x2/2
	
		if status="correct" : pos x2,150:gmode 2:gcopy 10,0,0,150,150
		if status="mistake" : pos x2,150:gmode 2:gcopy 11,0,0,150,150
	
		y2=y2-gsk_y2
		gsk_y2=gsk_y2/2
	
		color 0,142,148
	
		font "Noto Sans CJK SC Light",24
		if status="correct" : cmes "正解!",0,y2+10,1024,640
		if status="mistake" : cmes "不正解!",0,y2+10,1024,640
		
		font "Noto Sans CJK SC Light",16
		cmes explanation,0,y2+60,1024,640
	
		font "Noto Sans CJK SC Light",14
		pos 407,y2+135:gcopy 9,0,0,100,20 : color 255,255,255:cmes"次へ",407,y2+135-2,507,y+155
		pos 517,y2+135:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Wikipedia",517,y2+135-2,617,y+155
	
		if gsk_x2=0:break
		
		redraw 1
		wait 4
	loop
	
	redraw 0
	
	color 230,230,230:boxf 0,25,1024,640
	if status="correct" : pos 437,150:gmode 2:gcopy 10,0,0,150,150
	if status="mistake" : pos 437,150:gmode 2:gcopy 11,0,0,150,150
	
	color 0,142,148
	font "Noto Sans CJK SC Light",24
	if status="correct" : cmes "正解!",0,310,1024,400
	if status="mistake" : cmes "不正解!",0,310,1024,400
	
	font "Noto Sans CJK SC Light",16
	cmes explanation,0,360,1024,640
	
	font "Noto Sans CJK SC Light",14
	pos 407,435:gcopy 9,0,0,100,20 : color 255,255,255:cmes"次へ",407,435-2,507,455
	pos 517,435:gcopy 9,0,0,100,20 : color 255,255,255:cmes"Wikipedia",517,435-2,617,455
	
	redraw 1
	
	stop
*game3_result
	x=1024
	gsk_x=465
	
	status="result"
	
	repeat
		redraw 0
		
		color 230,230,230:boxf 0,25,1024,640
		
		x=x-gsk_x
		gsk_x=gsk_x/2
		
		font "Noto Sans CJK SC Light",30
		color 0,142,148 : cmes "結果発表" ,x,200,x+824,500
	
		if gsk_x=0:break
	
		redraw 1
		wait 4
	loop
	
	wait 1
	
	y=640
	gsk_y=170
	
	repeat
		redraw 0
	
		color 230,230,230:boxf 0,300,1024,640
		y=y-gsk_y
		gsk_y=gsk_y/2
	
		if level=1{
			if correct_total=0 : class="赤ちゃん級\n\n完全に勉強不足です。"
			if 1<= correct_total & 2 >= correct_total : class="小学生級\n\nまだまだです。"
			if 3<= correct_total & 4 >= correct_total : class="高校生級\n\n惜しいです。もう一息！"
			if correct_total=5 : class="社会人級\n\nパーフェクトです。上位のレベルにも挑戦してみましょう。"
		}
		if level=2{
			if correct_total=0 : class="宇宙人級\n\nもっと地球のことを知りましょう。"
			if 1<= correct_total & 3 >= correct_total : class="地底人級\n\nもっと地上の世界のことを知りましょう。"
			if 4<= correct_total & 7 >= correct_total : class="日本人級\n\nこの調子で頑張りましょう。"
			if 8<= correct_total & 9 >= correct_total : class="アジア人級\n\nなかなかよい出来です。\nパーフェクトを目指して頑張りましょう。"
			if correct_total=10 : class="地球人級\n\nパーフェクトです。上位のレベルにも挑戦してみましょう。"
		}
	
		if level=3{
			if correct_total=0 : class="幼稚園児級\n\nもっと人間界のことを知りましょう。"
			if 1<= correct_total & 5 >= correct_total : class="中学生級\n\n世界にもっと関心を持ちましょう。少しづつでいいのです。"
			if 6<= correct_total & 15 >= correct_total : class="一般社会人級\n\n何度も繰り返してパーフェクトを目指しましょう。"
			if 16<= correct_total & 19 >= correct_total : class="政治家級\n\nもう少し頑張れば大統領になれますよ。"
			if correct_total=20 : class="大統領級\n\nパーフェクトです。威張っても大丈夫でしょう。"
		}
	
		if level=4{
			if correct_total=0 : class="昆虫級\n\nもっと人間界のことを知りましょう。"
			if 1<= correct_total & 5 >= correct_total : class="鳥類級\n\nたまには羽を休めることも必要です。\nもっと地上の世界のことを知りましょう。"
			if 6<= correct_total & 15 >= correct_total : class="渡り鳥級\n\nこの調子で頑張りましょう。"
			if 16<= correct_total & 19 >= correct_total : class="雲級\n\nなかなかよい出来です。\nパーフェクトを目指して頑張りましょう。"
			if correct_total=20 : class="仙人級\n\nパーフェクトです。あなたは世界を知り尽くした人です。"
		}
	
		font "Noto Sans CJK SC Light",26
		if level=1 : color 0,142,148 : cmes "正答数"+correct_total+"問 /5問\n" ,200,y,824,640
		if level=2 : color 0,142,148 : cmes "正答数"+correct_total+"問 /10問\n" ,200,y,824,640
		if level=3 or level=4 : color 0,142,148 : cmes "正答数"+correct_total+"問 /20問\n" ,200,y,824,640
	
		font "Noto Sans CJK SC Light",18
		color 0,142,148 : cmes class ,200,y+40,824,640
	
		font "Noto Sans CJK SC Light",14
		pos 462,y+165:gcopy 9,0,0,100,20 : color 255,255,255:cmes"次へ",462,y+165-2,562,y+185
	
		if gsk_y=0:break
		
		redraw 1
		wait 4
	loop
	
	stop
*game3_result2
	notesel data
	noteload "data/record.dat"
	noteget point,1
	
	if level=4 : correct_total=int(correct_total)*2	;レベル4ではポイント2倍
	point=int(point)+int(correct_total)
	noteadd str(point),1,1
	notesave "data/record.dat"
	
	place_pos0=int(point)/30
	
	place_pos_minus=int(point)/1230*41
	place_pos0=place_pos0-place_pos_minus 			;一周した場合はスタート地点にもどる
	
	notesel travel
	noteload"data/travel.dat"
	noteget place,place_pos0
	
	split place,"(",place,place_pos
	
	place_pos=strmid (place_pos,0,instr(place_pos,0,")"))
	split place_pos,",",place_pos_x,place_pos_y
	place_pos_x=int(place_pos_x)
	place_pos_y=int(place_pos_y)
	
	x=1024
	gsk_x=465
	
	status="result2"
	
	repeat
		redraw 0
		
		color 230,230,230:boxf 0,25,1024,640
		
		x=x-gsk_x
		gsk_x=gsk_x/2
		
		font "Noto Sans CJK SC Light",30
		color 0,142,148 : cmes "現在のポイント "+point+" pt" ,x,100,x+824,500
	
		if gsk_x=0:break
	
		redraw 1
		wait 4
	loop
	
	wait 1
	
	y=640
	gsk_y=240
	
	repeat
		redraw 0
	
		color 230,230,230:boxf 0,140,1024,640
		y=y-gsk_y
		gsk_y=gsk_y/2
	
		font "Noto Sans CJK SC Light",26
		color 0,142,148 : cmes "現在地　"+place+"" ,200,y,824,640
	
		pos 92,y+35:gmode 0:gcopy 12,0,0,840,400
	
		color 255,127,39 : circle place_pos_x-3+92 , place_pos_y-3+y+35 , place_pos_x+3+92 , place_pos_y+3+y+35
	
		if gsk_y=0:break
		
		redraw 1
		wait 4
	loop
	
	sysfont 0
	pos 462,580:objimage 9:objsize 100,20:button"OK",*game
	
	stop
*game3_key
	if level=4 and status="question" and wparam=13{	;Enterキーが押されたとき
		if input_city=correct : goto*game3_correct
		if input_city!correct : goto*game3_mistake
	}
	if status="correct" and  wparam=13{
		goto*game3
	}
	if status="mistake" and  wparam=13{
		goto*game3
	}
	if status="result" and  wparam=13{
		goto*game3_result2
	}
	if status="result2" and  wparam=13{
		goto*game
	}
	return

*earth_clock
	clrobj
	
	onclick gosub *click
	now="earth_clock"
	
	jti_e = 0
	
	randomize
	
	buffer 16, 1024, 640
	 color : boxf
	 repeat 100
		 color 255, 255, 255
		 pset rnd(1024), rnd(640)
		 await 1
	 loop
		
	gsel 0, 2
	
*earth_clock_2
	oncmd 0
		
		redraw 0
		
		pos 0, 0 : gmode 0
		gcopy 16, 0, 0, 1024, 640
		
		font "Noto Sans CJK SC Light",14 : color 255, 255, 255 : pos 10,3:mes"World Timepiece"
		pos 910,5:gmode 2:gcopy 5,0,40,20,20	;ゲームボタン
		pos 940,5:gmode 2:gcopy 14,0,0,20,20	;地球時計
		pos 970,5:gmode 2:gcopy 13,0,0,20,20	;情報
		pos 1000,5:gmode 2:gcopy 1,0,0,20,20	;閉じるボタン
		
		jti_e++
	
		if jti_e >= 16 {
			jti_e = 0
		}
	
		if jti_e = jti_e_after_get_time {
			jsecond++
			if jsecond >= 60 {
				jminute ++
				jsecond = 0
			}
			if jminute >= 60 {
				jhour ++
				jminute = 0
			}
			if jhour >= 24 {
				jhour = 0
			}
		}
	
		second = jsecond
		minute = jminute
		
		if timedif = -3.5 {		;UTC5:30（インド時間）の場合
			minute= jminute - 30
			if minute >= 0 : hour = jhour - 3
			if minute <  0 : hour = jhour - 4
			
			if minute < 0  : minute = minute + 60
			if minute > 59 : minute = minute - 60
		}
	
		if second > 59 {
			second = 0
		}
		if minute > 59 {
			minute = 0
		}
	
		;夏時間がある場合は夏時間を取得（毎時0分）
		if summer_time_exist = 1 and minute = 0 and second = 0 and jti = 0 {
			oncmd 0
			
			hour = jhour + timedif_st				;一旦標準時に戻す
			gosub *get_summer_time					;*get_summer_timeにて夏時間期間中か判定
		}
		
		if jsecond = 0 {
			hour = jhour + timedif
		}
		
		if hour < 0 {	;表示する時間がマイナスになった場合
			hour = hour+24
		}
		if hour > 23{	;表示する時間が24時以上になった場合
			hour = hour-24
		}
		
		s=strf("%02d",hour)+":"
		s+=strf("%02d",minute)
		sec="."+strf("%02d",second)
	
		js=strf("%02d",jhour)+":"
		js+=strf("%02d",jminute)
		jsec="."+strf("%02d",jsecond)
		
		//太陽の描写
		color 155,69,0:circle 800,100,1240,540
	
		//EarthとSunの文字を表示
		color 255,255,255
		font "Noto Sans CJK SC Light",16
		cmes"Earth", 0, 410, 1024, 430
		cmes"Sun"  , 900, 550, 1024, 580
		
		gmode 2, 200, 200
		//地球を表示、時間に応じて地球を回転させる 角度は1時間あたり15°、1分あたり0.25°、1秒あたり約0.00416°　角度をdeg2radでラジアンに変換する
		pos 1024 / 2, 640 / 2 : grotate 15, 0, 0, deg2rad( 360- (jhour*15) - (0.25*jminute) - (0.00416*jsecond) ), 200, 200
	
		//太陽の影の部分（＝陽があったっていない部分）を描写
		month = gettime(1)
		
		color 10,10,10:gmode 4,,,50
		if month <= 5 {
			boxfa 412, 220, (562 - 18 * month), 420
		}
		if month = 6 {
			boxfa 412, 220, (412 + 40), 420
		}
		if month >= 7 {
			boxfa 412, 220, (422 + 18 * (month / 2)), 420
		}
	
		//現在時刻
		font "Noto Sans CJK SC Light" ,26 : color 255,255,255
		cmes""+cityname(city_id)+"\n"+s+""+sec+"", 0, 100, 1024, 180
	
		//東京の現在時刻（東京以外の都市を表示しているときのみ）
		if city ! "Tokyo" {
			font "Noto Sans CJK SC Light" ,16 : color 255,255,255
			cmes "Tokyo, Japan\n"+js+""+jsec+"", 0, 300, 600, 450
		}
	
		redraw 1
	
	oncmd 1
	
	return
	
*about
	clrobj
	
	color 230,230,230:boxf
	font "Noto Sans CJK SC Light",14 : color : pos 10,3:mes"World Timepiece"
	pos 910,5:gmode 0:gcopy 5,0,20,20,20	;ゲームボタン
	pos 940,5:gmode 0:gcopy 14,0,20,20,20	;地球時計
	pos 970,5:gmode 0:gcopy 13,0,20,20,20	;情報
	pos 1000,5:gmode 0:gcopy 1,0,20,20,20	;閉じるボタン
	
	now="about"
	
	notesel info
	noteload"data/version.txt"
	noteget name,0
	noteget version,1
	noteget build,2
	noteget date,3
	
	font "Noto Sans CJK SC Light",36 : color 0,0,0
	cmes name,0,130,1024,180
	font "Noto Sans CJK SC Light",16 : color 0,0,0
	cmes "Version "+version+"\nBuild "+build+"\n\nLast updated "+date+"",0,250,1024,350
	
	objsize 13, 13
	pos 445, 440 : chkbox "", offline_mode
	font "Noto Sans CJK SC Light",14 : color 0,0,0
	pos 465, 435 : mes "オフラインモード"
	
	redraw 1
	stop
	
*get_summer_time
	;夏時間等を調節
	
	;今日が第何週目の何曜日か取得
	today = gettime(3)
	week = gettime(2)
	month = gettime(1)
	
	;現地の日時がまだ昨日だった場合
	if jhour + timedif < 0 {
		today -= 1
		week -= 1
	}
	;現地の日時がもう明日だった場合
	if jhour + timedif > 24 {
		today += 1
		week += 1
	}
	
	;曜日がマイナスになった場合
	if week < 0 {
		week = 6
	}
	;曜日が7以上になった場合
	if week >= 7 {
		week = 0
	}
	
	;日付が0以下になってしまった場合
	if today <= 0 {
		month -= 1
		over_day = 1
	}
	
*get_days_the_month
	
	;今月の日数を確認
	if month = 1 or month = 3 or month = 5 or month = 7 or month = 8 or month = 10 or month = 12 {
		days_the_month = 31
	}
	if month = 4 or month = 6 or month = 9 or month = 11 {
		days_the_month = 30
	}
	if month = 2 and gettime(0) \ 4 = 0 {
		days_the_month = 29
	} else : if month = 2 {
		days_the_month = 28
	}
	
	;今日の日付が今月の日数を超えた場合
	if today > days_the_month {
		month += 1
		today = 1
		goto*get_days_the_month
	}
	
	;日付が0以下になってしまった場合、前の月の最終日に日付を合わせる
	if over_day = 1 {
		over_day = 0
		today = days_the_month
	}
	
	;今月の1日の曜日を取得
	week_of_first_day = week + 1
	
	repeat today
		week_of_first_day --
		
		if week_of_first_day <= 0 and (today-cnt) ! 1 {
			week_of_first_day = 7
		}
		await 1
	loop
	
	;第1週の日数
	first_week_days = 7 - week_of_first_day
	
	;今日が何週目にあたるか取得
	if today <= first_week_days {		;今日の日付が第1週の日付の範囲内に入る場合
	
		number_of_week = 1
	
	}else{								;その他の週の場合
		number_of_week = 0
		
		repeat today - first_week_days
			if cnt \ 7 = 0 {
				number_of_week ++
			}
			await 1
		loop
	
		;最初の1週間分を足す
		number_of_week += 1
	}
	
	;今週の○曜日が今月の第何○曜日か取得
	the_day = summer_start_week
	if first_week_days >= the_day + 1 {
		number_of_start_the_day = number_of_week - 1
	} else {
		if the_day = 0 {
			number_of_start_the_day = number_of_week - 1
		} else {
			number_of_start_the_day = number_of_week
		}
	}
	
	the_day = summer_finish_week
	
	if first_week_days >= the_day + 1 {
		number_of_finish_the_day = number_of_week - 1
	} else {
		if the_day = 0 {
			number_of_finiah_the_day = number_of_week - 1
		} else {
			number_of_finish_the_day = number_of_week
		}
	}
	
	;夏時間の始まりまたは終わりが最終○曜日の場合
	;最終○曜日が何周目か取得
	;日曜日の場合
	if summer_start_week_number = 7 and summer_start_month = month and summer_start_week = 0 {
		number_of_week_last_sunday = 0
		
		repeat
			if (cnt - first_week_days) \ 7 = 0 {
				number_of_week_last_sunday++
			}
			
			if (cnt - first_week_days) \ 7 = 0 and (cnt + 6) >= days_the_month {
				break
			}
				
			await 1
		loop
		
		summer_start_week_number = number_of_week_last_sunday
	}
	;金曜日の場合（＝イスラエルのエルサレム、最終日曜日を基準に計算する）
	if summer_start_week_number = 7 and summer_start_month = month and summer_start_week = 5 {
		number_of_week_last_sunday = 0
		
		repeat
			if (cnt - first_week_days) \ 7 = 0 {
				number_of_week_last_sunday++
			}
			
			if (cnt - first_week_days) \ 7 = 0 and (cnt + 6) >= days_the_month {
				break
			}
				
			await 1
		loop
	
		if (cnt + 4) >= days_the_month {
			summer_start_week_number = number_of_week_last_sunday - 1	;最終日曜日がある週に最終金曜日がない場合は、最終金曜日は最終日曜日よりも前の週になる
		}else{
			summer_start_week_number = number_of_week_last_sunday		;最終日曜日がある週に査収金曜日がある場合はそのままでよい
		}
	}
	
	;夏時間が終わる最終○曜日はWorld Timepieceに登録されている都市では最終日曜日しかないので求めるのは最終日曜日のみで良い
	if summer_finish_week_number = 7 and summer_finish_month = month {
		number_of_week_last_sunday = 0
		
		repeat
			if (cnt - first_week_days) \ 7 = 0 {
				number_of_week_last_sunday++
			}
			
			if (cnt - first_week_days) \ 7 = 0 and (cnt + 6) >= days_the_month {
				break
			}
				
			await 1
		loop
		
		summer_finish_week_number = number_of_week_last_sunday
	}
	
	;今は夏時間期間中か判定
	timedif = timedif_st
	
	;北半球の夏時間
	if hemisphere = "N" {
		if summer_start_month = month or summer_finish_month = month {
			
			if summer_start_month = month {														;今月が夏時間が始まる月で
				if summer_start_week_number < number_of_start_the_day {							;なおかつ夏時間が始まる週・曜日よりも後（当日は含めない）の日なら
					timedif++																	;夏時間を設定（+1時間）
				}
				if summer_start_week_number = number_of_start_the_day {							;もしも夏時間が始まる週が今週で
					if summer_start_week > week {												;今日が夏時間が始まる曜日よりもあとならば
						timedif++																;夏時間を設定（+1時間）
					}
					if summer_start_week = week {												;もしも夏時間が始まる日が今日で
						if summer_start_time <= hour {											;夏時間が始まる時刻（標準時）よりも後なら
							timedif++															;夏時間を設定（+1時間）
						}
					}
				}
			}
			
			if summer_finish_month = month {													;今月が夏時間が終わる月で
				if summer_finish_week_number > number_of_finish_the_day {						;なおかつ夏時間が終わる週・曜日よりも前（当日は含めない）の日なら
					timedif++																	;夏時間を設定（+1時間）
				}
				if summer_finish_week_number = number_of_finish_the_day {						;もしも夏時間が終わる週が今週で
					if summer_finish_week < week {												;今日が夏時間が終わる曜日よりも前ならば
						timedif++																;夏時間を設定（+1時間）
					}
					if summer_finish_week = week {												;もしも夏時間が終わる日が今日で
						if summer_finish_time > hour {											;夏時間が終わる時刻（標準時）よりも前なら
							timedif++															;夏時間を設定（+1時間）
						}
					}
				}
			}
			
		} else {
			timedif++				;夏時間が始まる月・終わる月が今月ではないが夏時間期間中の場合は夏時間を設定（+1時間）
		}
	}
	
	;メモ:始まる日が第3日曜日で今週が第4週の場合あり
	
	;南半球の夏時間
	if hemisphere = "S" {
		if summer_start_month = month or summer_finish_month = month {
			if summer_start_month = month {														;今月が夏時間が始まる月で
				if summer_start_week_number < number_of_start_the_day {							;なおかつ夏時間が始まる週・曜日よりも後（当日は含めない）の日なら
					timedif++																	;夏時間を設定（+1時間）
				}
				if summer_start_week_number = number_of_start_the_day {							;もしも夏時間が始まる週が今週で
					if summer_start_week > week {												;今日が夏時間が始まる曜日よりもあとならば
						timedif++																;夏時間を設定（+1時間）
					}
					if summer_start_week = week {												;もしも夏時間が始まる日が今日で
						if summer_start_time <= hour {											;夏時間が始まる時刻（標準時）よりも後なら
							timedif++															;夏時間を設定（+1時間）
						}
					}
				}
			}
			if summer_finish_month = month {													;今月が夏時間が終わる月で
				if summer_finish_week_number < number_of_finish_the_day {						;なおかつ夏時間が終わる週・曜日よりも前（当日は含めない）の日なら
					timedif++																	;夏時間を設定（+1時間）
				}
				if summer_finish_week_number = number_of_finish_the_day {						;もしも夏時間が終わる週が今週で
					if summer_finish_week < week {												;今日が夏時間が終わる曜日よりもあとならば
						timedif++																;夏時間を設定（+1時間）
					}
					if summer_finish_week = week {												;もしも夏時間が終わる日が今日で
						if summer_finish_time > hour {											;夏時間が終わる時刻（標準時）よりも後なら
							timedif++															;夏時間を設定（+1時間）
						}
					}
				}
			}
			
		} else {
			timedif++				;夏時間が始まる月・終わる月が今月ではないが夏時間期間中の場合は夏時間を設定（+1時間）
		}
		
	}
	
	return
	
*ontimer
	if now="clock" : sub=1 : gosub*display2
	if now="earth_clock" : sub=1 : gosub*earth_clock_2
	return